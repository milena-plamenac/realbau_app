@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@{
    var hbdisabledClass = (Model.hbfinished == 0 || Model.hbfinished == null) ? "disabled" : "";
}

@model realbau_app.api.Models.AddressDetails;

<h4 class="text-center">Address details</h4>

<h6 class="text-center">@Model.street  @Model.housenumber, @Model.city</h6>
<h6 class="text-center"> @Model.email   </h6>
<h6 class="text-center"> @Model.phone, @Model.phone2 </h6>
<span id="addressId" hidden>@Model.id</span>

<div class="row">
    <div class="col s12 m12 l12">
        <div class="card">
            <div class="card-content">
                <span class="card-title">Hausbegehung</span>
                <div class="row">
                    <div class="col s6 m6 l6">
                        <p>Date: @Model.hbdate?.ToString("dd.MM.yyyy")</p>
                        <p>Termin: @Model.hbfrom?.ToString("HH:mm") - @Model.hbto?.ToString("HH:mm")</p>
                        <p>Call date: <span id="hbCallDate">@Model.hbcalldate?.ToString("dd.MM.yyyy HH:mm")</span></p>
                    </div>
                    <div class="input-field col s6 m6 l6">
                        <textarea class="materialize-textarea" id="hbComment">@Model.hbcomment</textarea>
                        <label for="hbComment">Hausbegehung comment</label>

                    </div>
                </div>



            </div>
            <div class="card-action">
                <a class="waves-effect waves-light btn backgroundBrown" disabled="@(Model.hbfinished == 1)" id="hbGetTerm"><i class="material-icons left">date_range</i>Get HB term</a>
                <a class="waves-effect waves-light btn backgroundOrange" disabled="@(Model.hbcalldate != null)" href="#" id="hbCustomerCalled"><i class="material-icons left">phone</i>Customer called</a>
                <a class="waves-effect waves-light btn" disabled="@(Model.hbfinished == 1)" href="#" id="hbFinished"><i class="material-icons left">check</i>HB finished</a>
                <a class="waves-effect waves-light btn" disabled="@(Model.hbfinished == 1)" href="#" id="hbSaveChanges"><i class="material-icons left">check</i>Save changes</a>
            </div>
        </div>
    </div>
</div>
<div class="row">

    <div class="col s12 m12 l12">
        <div class="card">
            <div class="card-content">
                <span class="card-title">Tiefbau</span>
                <div class="row">
                    <div class="col s6 m6 l6">
                        <textarea class="materialize-textarea" id="meterInput">@Model.meter</textarea>
                        <label for="meterInput">Meter</label>
                        @*<textarea id="meterInput" class="materialize-textarea">@Model.meter</textarea>
                        <label for="meterInput">Meter</label>
                        <p>Date: @Model.tdate</p>*@
                    </div>
                    <div class="col s6 m6 l6">
                        <textarea class="materialize-textarea" id="tCommentInput">@Model.tcomment</textarea>
                        <label for="tCommentInput">Tiefbau comment</label>

                    </div>
                </div>
                <div class="row">
                    <div class="col s12 m12 l12">
                        <p>Date: <span id="tDate">@Model.tdate</span></p>
                    </div>
                </div>
                @* <p>Date: @Model.tdate</p>
                <p>Meter: <input class="input-field" value="@Model.meter" id="meterInput" /></p>*@
            </div>
            <div class="card-action">
                <a class="waves-effect waves-light btn" disabled="@(Model.tfinished == 1)" href="#" id="tFinished"><i class="material-icons left">check</i>Tiefbau finished</a>
                <a class="waves-effect waves-light btn" disabled="@(Model.tfinished == 1)" href="#" id="tSaveChanges"><i class="material-icons left">check</i>Save changes</a>

            </div>
        </div>
    </div>
</div>

@*<div class="row">
    <div class="col s12">
        <ul class="tabs">
            <li class="tab col s3"><a href="#test1">Test 1</a></li>
            <li class="tab col s3"><a class="active" href="#test2">Test 2</a></li>
            <li class="tab col s3 disabled"><a href="#test3">Disabled Tab</a></li>
            <li class="tab col s3"><a href="#test4">Test 4</a></li>
        </ul>
    </div>
    <div id="test1" class="col s12">Test 1</div>
    <div id="test2" class="col s12">Test 2</div>
    <div id="test3" class="col s12">Test 3</div>
    <div id="test4" class="col s12">Test 4</div>
</div>*@

@*<h5>Hausbegehung</h5>
<p>Id: <span id="hbId">@Model.hbId</span></p>
<p>Date: @Model.hbdate</p>
<p>Termin from: @Model.hbfrom</p>
<p>Termin to: @Model.hbto</p>
<p>Call date: @Model.hbcalldate</p>
<p>Done: @Model.hbfinished</p>
<a class="waves-effect waves-light btn" disabled="@(Model.hbfinished == 1)"><i class="material-icons left">cloud</i>Get HB term</a>*@

@*<h5>Tiefbau</h5>
<p>Id: @Model.tId</p>
<p>Date: @Model.tdate</p>
<p>Meter: @Model.meter</p>
<p>Done: @Model.tfinished</p>*@

<h5>Faser</h5>
<p>Date: @Model.fdate</p>
<p>Done: @Model.ffinished</p>

<h5>Montaze</h5>
<p>Id: @Model.mId</p>
<p>Date: @Model.mdate</p>
<p>Termin from: @Model.mfrom</p>
<p>Termin to: @Model.mto</p>
<p>Call date: @Model.mcalldate</p>
<p>Done: @Model.mfinished</p>

<h5>Aktivirung</h5>
<p>Id: @Model.aId</p>
<p>Date: @Model.adate</p>
<p>Termin from: @Model.afrom</p>
<p>Termin to: @Model.ato</p>
<p>Done: @Model.afinished</p>

@section Scripts{
    <script>
        //  $(document).ready(function(){
        //  $('.tabs').tabs();
        //});

        //$("#hbCustomerCalled").on("click", function(){
        //    alert("hbCustomerClicked");
        //});

        //$("#hbFinished").on("click", function(){
        //    alert("hbFinished");
        //});

        $(function() {
            $("#hbCustomerCalled").click(function() {
                console.log($("#addressId"));
                var addressId = $("#addressId")[0].innerText;
                console.log($("#addressId")[0]);
                //alert(addressId);
                var currentTime = new Date(); //new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Belgrade" }));
                var hbData = {};
                hbData.calldate = currentTime;

                $.ajax({
                    type: "PUT",
                    url: "/api/Hausbegehung/" + addressId,
                    data: JSON.stringify(hbData),
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function(r) {
                        alert("Success");
                        $("#hbCustomerCalled").attr("disabled", "disabled");
                        $("#hbCallDate").html(currentTime.getDate() + '.' + (currentTime.getMonth().toFixed() - 1) + '.' + currentTime.getFullYear() + ' ' + currentTime.getHours() + ':' + currentTime.getMinutes());
                        //$('#tblHbTerms tbody').append("<tr><td></td><td>" + newRow.hbfrom + "</td><td>" + newRow.hbto + "</td><td></td></tr>");
                    },
                    error: function(err) {
                        alert("Error");
                        console.log(JSON.stringify(err))
                    }
                });
            });

            $("#hbSaveChanges").click(function() {
                //console.log($("#hbComment"));
                //var addressId = $("#addressId")[0].innerText;
                let hbCommentInput = $("#hbComment")[0];
                console.log(hbCommentInput.value);
                //alert(addressId);
                //var currentTime = new Date(); //new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Belgrade" }));

                var hbData = {};
                hbData.hbcomment = hbCommentInput.value;

                var addressId = $("#addressId")[0].innerText;

                $.ajax({
                    type: "PUT",
                    url: "/api/Hausbegehung/" + addressId,
                    data: JSON.stringify(hbData),
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function(r) {
                        alert("Success");
                        hbCommentInput.val(hbData.comment);
                        //$("#hbCustomerCalled").attr("disabled", "disabled");
                        //$('#tblHbTerms tbody').append("<tr><td></td><td>" + newRow.hbfrom + "</td><td>" + newRow.hbto + "</td><td></td></tr>");
                    },
                    error: function(err) {
                        alert("Error");
                        console.log(JSON.stringify(err))
                    }
                });
            })

            $("#hbFinished").click(function() {
                //console.log($("#hbComment"));
                //var addressId = $("#addressId")[0].innerText;
                //let hbCommentInput = $("#hbComment")[0];
                //console.log(hbCommentInput.value);
                //alert(addressId);
                //var currentTime = new Date(); //new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Belgrade" }));

                var hbData = {};
                hbData.finished = 1;

                var addressId = $("#addressId")[0].innerText;

                $.ajax({
                    type: "PUT",
                    url: "/api/Hausbegehung/" + addressId,
                    data: JSON.stringify(hbData),
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function(r) {
                        alert("Success");
                        $("#hbGetTerm").attr("disabled", "disabled");
                        $("#hbCustomerCalled").attr("disabled", "disabled");
                        $("#hbFinished").attr("disabled", "disabled");
                        $("#hbSaveChanges").attr("disabled", "disabled");
                        //$("#hbCustomerCalled").attr("disabled", "disabled");
                        //$('#tblHbTerms tbody').append("<tr><td></td><td>" + newRow.hbfrom + "</td><td>" + newRow.hbto + "</td><td></td></tr>");
                    },
                    error: function(err) {
                        alert("Error");
                        console.log(JSON.stringify(err))
                    }
                });
            })

            $("#hbGetTerm").click(function() {
                var addressId = $("#addressId")[0].innerText;
                var currentTime = new Date();
                let date = currentTime.getFullYear() + '-' + (currentTime.getMonth().toFixed() - 1) + '-' + currentTime.getDate();
                window.location.href = "/Hausbegehung/Terms/?address_id=" + addressId + '&year=' + currentTime.getFullYear() + '&month=' + (currentTime.getMonth().toFixed()) + '&date=' + currentTime.getDate();
            })

            $("#tSaveChanges").click(function() {
                //console.log($("#hbComment"));
                //var addressId = $("#addressId")[0].innerText;
                let tCommentInput = $("#tCommentInput")[0];
                console.log(tCommentInput.value);
                let meterInput = $("#meterInput")[0];
                console.log(meterInput.value);
                //alert(addressId);
                //var currentTime = new Date(); //new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Belgrade" }));

                var tData = {};
                tData.tcomment = tCommentInput.value;
                tData.meter = meterInput.value;

                var addressId = $("#addressId")[0].innerText;

                $.ajax({
                    type: "PUT",
                    url: "/api/Tiefbau/" + addressId,
                    data: JSON.stringify(tData),
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function(r) {
                        alert("Success");
                        //hbCommentInput.val(hbData.comment);
                        //$("#hbCustomerCalled").attr("disabled", "disabled");
                        //$('#tblHbTerms tbody').append("<tr><td></td><td>" + newRow.hbfrom + "</td><td>" + newRow.hbto + "</td><td></td></tr>");
                    },
                    error: function(err) {
                        alert("Error");
                        console.log(JSON.stringify(err))
                    }
                });
            })

            $("#tFinished").click(function() {
                //console.log($("#hbComment"));
                //var addressId = $("#addressId")[0].innerText;
                //let hbCommentInput = $("#hbComment")[0];
                //console.log(hbCommentInput.value);
                //alert(addressId);
                //var currentTime = new Date(); //new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Belgrade" }));

                var tData = {};
                tData.finished = 1;

                var addressId = $("#addressId")[0].innerText;

                var currentTime = new Date(); //new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Belgrade" }));
                var hbData = {};
                tData.tdate = currentTime;

                $.ajax({
                    type: "PUT",
                    url: "/api/Tiefbau/" + addressId,
                    data: JSON.stringify(tData),
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function(r) {
                        alert("Success");
                        //$("#hbGetTerm").attr("disabled", "disabled");
                        //$("#hbCustomerCalled").attr("disabled", "disabled");
                        $("#tFinished").attr("disabled", "disabled");
                        $("#tSaveChanges").attr("disabled", "disabled");
                        $("#tDate").html(currentTime.getDate() + '.' + (currentTime.getMonth().toFixed() - 1) + '.' + currentTime.getFullYear() + ' ' + currentTime.getHours() + ':' + currentTime.getMinutes());
                        
                        //$("#hbCustomerCalled").attr("disabled", "disabled");
                        //$('#tblHbTerms tbody').append("<tr><td></td><td>" + newRow.hbfrom + "</td><td>" + newRow.hbto + "</td><td></td></tr>");
                    },
                    error: function(err) {
                        alert("Error");
                        console.log(JSON.stringify(err))
                    }
                });
            })
        })
    </script>
}